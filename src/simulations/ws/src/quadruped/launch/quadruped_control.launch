<launch>
  <arg name="model" default="$(find quadruped)/urdf/quadruped_model.xacro" />
  <arg name="rvizconfig" default="$(find quadruped)/rviz/urdf.rviz" />
  <arg name="db" default="false" />
  <arg name="pipeline" default="ompl" />
  <arg name="debug" value="true"/>
  <arg name="use_rviz" default="false" />

  <include file="$(find quadruped)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <include file="$(find quadruped)/launch/quadruped_gazebo.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <rosparam command="load" file="$(find quadruped)/config/quadruped_control.yaml"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/quadruped" args="front_right_leg_controller front_left_leg_controller back_right_leg_controller back_left_leg_controller joint_state_controller"/>

  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher">
    <rosparam param="source_list">[quadruped/joint_states]</rosparam>
  </node>
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/quadruped/joint_states" />
    <param name="publish_frequency" type="double" value="60.0" />
  </node>

  <include file="$(find quadruped)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="false"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
  </include>

  <include file="$(find quadruped)/launch/default_warehouse_db.launch" if="$(arg db)">
    <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
  </include>

</launch>
